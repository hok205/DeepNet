name: "LEON-S"

### SegNet-based deep fully convolutional network for semantic segmentation
### of Earth Observation
### Authors : Nicolas Audebert (a,b), Bertrand Le Saux (a), Sébastien Lefèvre (b)
### (a) ONERA, The French Aerospace Lab, (b) IRISA
###
### With the support of the joint Total-ONERA project NAOMI
###
### https://github.com/nshaud/DeepNetsForEO
###
### Should be used with our caffe fork : https://github.com/nshaud/caffe


##### TRAINING DATA LAYERS #####
## you should edit the paths to the LMDBs
## or use other layers such as ImageData
layer {
  name: "irrg_data"
  type: "Data"
  top: "irrg_data"
  include {
    phase: TRAIN
  }
  data_param {
    source: "path/to/your/train/lmdb" # EDIT ME
    batch_size: 10  # Adjust given available memory
    backend: LMDB
  }
  transform_param {
  # Based on ISPRS Vaihingen IRRG values
    # Green mean
    mean_value: 81.29
    # Red mean
    mean_value: 81.93
    # Infrared mean
    mean_value: 120.89
  }
}
layer {
  name: "label"
  type: "Data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "/path/to/your/train/labels/lmdb" # EDIT ME
    batch_size: 10  # WARNING : SHOULD BE THE SAME AS ABOVE
    backend: LMDB
  }
}

###### TESTING DATA LAYERS #####
## uncomment if you want to use them

#layer {
#  name: "irrg_data"
#  type: "Data"
#  top: "irrg_data"
#  include {
#    phase: TEST
#  }
#  data_param {
#    source: "path/to/your/test/lmdb" # EDIT ME
#    batch_size: 15  # Adjust given available memory
#    backend: LMDB
#  }
#  transform_param {
#    # Green mean
#    mean_value: 81.29
#    # Red mean
#    mean_value: 81.93
#    # Infrared mean
#    mean_value: 120.89
#  }
#}
#layer {
#  name: "label"
#  type: "Data"
#  top: "label"
#  include {
#    phase: TEST
#  }
#  data_param {
#    source: "/path/to/your/test/labels/lmdb" # EDIT ME
#    batch_size: 15  # WARNING : SHOULD BE THE SAME AS ABOVE
#    backend: LMDB
#  }
#}

## Learning rate multiplier has been set to 0.5 for layers initialized from VGG-16
## as this offers the best final accuracy

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "irrg_data"
  top: "conv1_1"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv1_1_bn"
  type: "BatchNorm"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_1_scale"
  type: "Scale"
  bottom: "conv1_1"
  top: "conv1_1"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_1_relu"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv1_2_bn"
  type: "BatchNorm"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "conv1_2_scale"
  type: "Scale"
  bottom: "conv1_2"
  top: "conv1_2"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_2_relu"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv2_1_bn"
  type: "BatchNorm"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_1_scale"
  type: "Scale"
  bottom: "conv2_1"
  top: "conv2_1"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_relu"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv2_2_bn"
  type: "BatchNorm"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "conv2_2_scale"
  type: "Scale"
  bottom: "conv2_2"
  top: "conv2_2"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_relu"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv3_1_bn"
  type: "BatchNorm"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_1_scale"
  type: "Scale"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_relu"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv3_2_bn"
  type: "BatchNorm"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_2_scale"
  type: "Scale"
  bottom: "conv3_2"
  top: "conv3_2"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_relu"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv3_3_bn"
  type: "BatchNorm"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "conv3_3_scale"
  type: "Scale"
  bottom: "conv3_3"
  top: "conv3_3"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_relu"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv4_1_bn"
  type: "BatchNorm"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_1_scale"
  type: "Scale"
  bottom: "conv4_1"
  top: "conv4_1"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_relu"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv4_2_bn"
  type: "BatchNorm"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_2_scale"
  type: "Scale"
  bottom: "conv4_2"
  top: "conv4_2"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_relu"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv4_3_bn"
  type: "BatchNorm"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "conv4_3_scale"
  type: "Scale"
  bottom: "conv4_3"
  top: "conv4_3"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_3_relu"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv5_1_bn"
  type: "BatchNorm"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_1_scale"
  type: "Scale"
  bottom: "conv5_1"
  top: "conv5_1"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_1_relu"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv5_2_bn"
  type: "BatchNorm"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_2_scale"
  type: "Scale"
  bottom: "conv5_2"
  top: "conv5_2"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_2_relu"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 0.5
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv5_3_bn"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "conv5_3_scale"
  type: "Scale"
  bottom: "conv5_3"
  top: "conv5_3"
  param {
    lr_mult: 0.5
  }
  param {
    lr_mult: 1.0
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_3_relu"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5"
  top: "pool5_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample5"
  type: "Upsample"
  bottom: "pool5"
  bottom: "pool5_mask"
  top: "upsample5"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv5_3_D"
  type: "Convolution"
  bottom: "upsample5"
  top: "conv5_3_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv5_3_D_bn"
  type: "BatchNorm"
  bottom: "conv5_3_D"
  top: "conv5_3_D"
}
layer {
  name: "conv5_3_D_scale"
  type: "Scale"
  bottom: "conv5_3_D"
  top: "conv5_3_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_3_D_relu"
  type: "ReLU"
  bottom: "conv5_3_D"
  top: "conv5_3_D"
}
layer {
  name: "conv5_2_D"
  type: "Convolution"
  bottom: "conv5_3_D"
  top: "conv5_2_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv5_2_D_bn"
  type: "BatchNorm"
  bottom: "conv5_2_D"
  top: "conv5_2_D"
}
layer {
  name: "conv5_2_D_scale"
  type: "Scale"
  bottom: "conv5_2_D"
  top: "conv5_2_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_2_D_relu"
  type: "ReLU"
  bottom: "conv5_2_D"
  top: "conv5_2_D"
}
layer {
  name: "conv5_1_D"
  type: "Convolution"
  bottom: "conv5_2_D"
  top: "conv5_1_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv5_1_D_bn"
  type: "BatchNorm"
  bottom: "conv5_1_D"
  top: "conv5_1_D"
}
layer {
  name: "conv5_1_D_scale"
  type: "Scale"
  bottom: "conv5_1_D"
  top: "conv5_1_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_1_D_relu"
  type: "ReLU"
  bottom: "conv5_1_D"
  top: "conv5_1_D"
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "conv5_1_D"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv4_3_D"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv4_3_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv4_3_D_bn"
  type: "BatchNorm"
  bottom: "conv4_3_D"
  top: "conv4_3_D"
}
layer {
  name: "conv4_3_D_scale"
  type: "Scale"
  bottom: "conv4_3_D"
  top: "conv4_3_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_3_D_relu"
  type: "ReLU"
  bottom: "conv4_3_D"
  top: "conv4_3_D"
}
layer {
  name: "conv4_2_D"
  type: "Convolution"
  bottom: "conv4_3_D"
  top: "conv4_2_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv4_2_D_bn"
  type: "BatchNorm"
  bottom: "conv4_2_D"
  top: "conv4_2_D"
}
layer {
  name: "conv4_2_D_scale"
  type: "Scale"
  bottom: "conv4_2_D"
  top: "conv4_2_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_D_relu"
  type: "ReLU"
  bottom: "conv4_2_D"
  top: "conv4_2_D"
}
layer {
  name: "conv4_1_D"
  type: "Convolution"
  bottom: "conv4_2_D"
  top: "conv4_1_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv4_1_D_bn"
  type: "BatchNorm"
  bottom: "conv4_1_D"
  top: "conv4_1_D"
}
layer {
  name: "conv4_1_D_scale"
  type: "Scale"
  bottom: "conv4_1_D"
  top: "conv4_1_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_D_relu"
  type: "ReLU"
  bottom: "conv4_1_D"
  top: "conv4_1_D"
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv4_1_D"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv3_3_D"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv3_3_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv3_3_D_bn"
  type: "BatchNorm"
  bottom: "conv3_3_D"
  top: "conv3_3_D"
}
layer {
  name: "conv3_3_D_scale"
  type: "Scale"
  bottom: "conv3_3_D"
  top: "conv3_3_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_D_relu"
  type: "ReLU"
  bottom: "conv3_3_D"
  top: "conv3_3_D"
}
layer {
  name: "conv3_2_D"
  type: "Convolution"
  bottom: "conv3_3_D"
  top: "conv3_2_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv3_2_D_bn"
  type: "BatchNorm"
  bottom: "conv3_2_D"
  top: "conv3_2_D"
}
layer {
  name: "conv3_2_D_scale"
  type: "Scale"
  bottom: "conv3_2_D"
  top: "conv3_2_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_D_relu"
  type: "ReLU"
  bottom: "conv3_2_D"
  top: "conv3_2_D"
}
layer {
  name: "conv3_1_D"
  type: "Convolution"
  bottom: "conv3_2_D"
  top: "conv3_1_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv3_1_D_bn"
  type: "BatchNorm"
  bottom: "conv3_1_D"
  top: "conv3_1_D"
}
layer {
  name: "conv3_1_D_scale"
  type: "Scale"
  bottom: "conv3_1_D"
  top: "conv3_1_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_D_relu"
  type: "ReLU"
  bottom: "conv3_1_D"
  top: "conv3_1_D"
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv3_1_D"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv2_2_D"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv2_2_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv2_2_D_bn"
  type: "BatchNorm"
  bottom: "conv2_2_D"
  top: "conv2_2_D"
}
layer {
  name: "conv2_2_D_scale"
  type: "Scale"
  bottom: "conv2_2_D"
  top: "conv2_2_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_D_relu"
  type: "ReLU"
  bottom: "conv2_2_D"
  top: "conv2_2_D"
}
layer {
  name: "conv2_1_D"
  type: "Convolution"
  bottom: "conv2_2_D"
  top: "conv2_1_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv2_1_D_bn"
  type: "BatchNorm"
  bottom: "conv2_1_D"
  top: "conv2_1_D"
}
layer {
  name: "conv2_1_D_scale"
  type: "Scale"
  bottom: "conv2_1_D"
  top: "conv2_1_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_D_relu"
  type: "ReLU"
  bottom: "conv2_1_D"
  top: "conv2_1_D"
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv2_1_D"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv1_2_D"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv1_2_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "conv1_2_D_bn"
  type: "BatchNorm"
  bottom: "conv1_2_D"
  top: "conv1_2_D"
}
layer {
  name: "conv1_2_D_scale"
  type: "Scale"
  bottom: "conv1_2_D"
  top: "conv1_2_D"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_2_D_relu"
  type: "ReLU"
  bottom: "conv1_2_D"
  top: "conv1_2_D"
}
layer {
  name: "conv1_1_D"
  type: "Convolution"
  bottom: "conv1_2_D"
  top: "conv1_1_D"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 6
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv1_1_D"
  bottom: "label"
  top: "loss"
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv1_1_D"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
  include {
    phase: TRAIN
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv1_1_D"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
  #accuracy_param {
  #  ignore_label: 5
  #}
  include {
    phase: TEST
  }
}
